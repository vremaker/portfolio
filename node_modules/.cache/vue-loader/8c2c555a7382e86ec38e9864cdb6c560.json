{"remainingRequest":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/valerieremaker/Documents/GitHub/portfolio/src/views/About.vue?vue&type=template&id=039c5b43&scoped=true&","dependencies":[{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/src/views/About.vue","mtime":1646157110982},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1645558431171},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645558432747},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1645558431171},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js","mtime":1645558432747}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiV2l0aE5hdiIsIFsKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgImNvdyBkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIgYWxpZ24taXRlbXMtbGctY2VudGVyXG4gICAgICBtdC01IG10LWxnLTAiLAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgIlxuICAgICAgICBkLWZsZXhcbiAgICAgICAganVzdGlmeS1jb250ZW50LWFyb3VuZFxuICAgICAgICBhbGlnbi1pdGVtcy1jZW50ZXJcbiAgICAgICAgZmxleC1jb2x1bW4gZmxleC1sZy1yb3dcbiAgICAgICIsCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgImNvdyBzbWFsbCBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICAgICAgICAgICAgc3R5bGU6IHsgImJhY2tncm91bmQtaW1hZ2UiOiAidXJsKGFzc2V0cy92ZXJ0aWNhbC1zd29vcC5wbmcpIiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJpbWciIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltYWdlIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6ICJhc3NldHMvdmFsLmpwZWciLAogICAgICAgICAgICAgICAgICAgIGFsdDogIkEgYmxvbmRlIGdpcmwgc3RhbmRpbmcgaW4gZnJvbnQgb2YgYSBjb2xvcmZ1bCB3YWxsIiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltYWdlIG10LTUiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBpZDogIm1vYmlsZSIsCiAgICAgICAgICAgICAgICBzcmM6ICJhc3NldHMvdmFsLmpwZWciLAogICAgICAgICAgICAgICAgYWx0OiAiQSBibG9uZGUgZ2lybCBzdGFuZGluZyBpbiBmcm9udCBvZiBhIGNvbG9yZnVsIHdhbGwiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhcmdlIiwgYXR0cnM6IHsgaWQ6ICJ0ZXh0LWJveCIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJ0ZXh0IiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIkl0J3MgbmljZSB0byBtZWV0IHlvdSEiKV0pLAogICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiIE15IG5hbWUgaXMgVmFsZXJpZSBSZW1ha2VyIGFuZCBJIGFtIGEgU2VuaW9yIGF0IFRoZSBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24gcHVyc3VpbmcgYSBkb3VibGUgbWFqb3IgaW4gSHVtYW4gQ2VudGVyZWQgRGVzaWduICYgRW5naW5lZXJpbmcgKEhDREUpIGFuZCBQc3ljaG9sb2d5LiBJIGludGVuZCB0byB1c2UgdGhlc2UgZGVncmVlcyB0byBnbyBpbnRvIHRoZSBmaWVsZCBvZiBVc2VyIEV4cGVyaWVuY2UgRGVzaWduLiBNeSBnb2FsIGlzIHRvIGNyZWF0ZSBjbGVhbiwgZnVuLCBhbmQgaW50dWl0aXZlIGRlc2lnbnMgdGhyb3VnaCB0aGUgaW1wbGVtZW50YXRpb24gb2YgYm90aCBodW1hbiBjZW50ZXJlZCBkZXNpZ24gYW5kIHBzeWNob2xvZ2ljYWwgcHJpbmNpcGxlcy4gIgogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICIgSSBoYXZlIGJlZW4gaW52b2x2ZWQgaW4gYSB3aWRlIHZhcmlldHkgb2YgdW5kZXJncmFkdWF0ZSByZXNlYXJjaCBwcm9qZWN0cyBpbiBib3RoIFBzeWNob2xvZ3kgYW5kIEhDREUuIEN1cnJlbnRseSwgSSBoZWxwIGNvbmR1Y3QgcXVhbGl0YXRpdmUgcmVzZWFyY2ggd2hpY2ggYW5hbHl6ZWQgVGlrVG9rIHZpZGVvcyBmcm9tIHRoZSBUZXhhcyBFbmVyZ3kgQ3Jpc2lzIHRvIHVuZGVyc3RhbmQgdGhlIHJvbGUgb2Ygc29jaWFsIG1lZGlhIGluIGNyaXNpcyByZXNwb25zZXMuIEluIHRoZSBkZXBhcnRtZW50IG9mIHBzeWNob2xvZ3ksIEkgaGVscGVkIGNvbGxlY3QgZGF0YSBmb3IgYSBWaXJ0dWFsIFJlYWxpdHkgc3R1ZHkgd2hpY2ggaW52ZXN0aWdhdGVkIHBhcnRpY2lwYW50cycgcmVhY3Rpb24gdG8gZGlmZmVyZW50IGxldmVscyBvZiBpbW1lcnNpb24gaW50byBzaW11bGF0ZWQgbmF0dXJhbCBlbnZpcm9ubWVudHMuICIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiIEkgYWxzbyB3b3JrIGFzIGFuIEVuZ2luZWVyaW5nIEFtYmFzc2Fkb3IgZm9yIHRoZSBDb2xsZWdlIG9mIEVuZ2luZWVyaW5nIHRvIGhlbHAgcHJvc3BlY3RpdmUgc3R1ZGVudHMgZ2V0IGV4Y2l0ZWQgYWJvdXQgb3VyIGVuZ2luZWVyaW5nIHByb2dyYW0uIFdoZW4gSSBhbSBub3Qgc3R1ZHlpbmcsIEkgbG92ZSB0byBjcm9jaGV0LCBhbmQgZW5qb3kgdGhlIG5hdHVyYWwgd29ybGQuICIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0KICAgICAgICApLAogICAgICBdCiAgICApLAogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}