{"remainingRequest":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/valerieremaker/Documents/GitHub/portfolio/src/views/About.vue?vue&type=template&id=039c5b43&scoped=true&","dependencies":[{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/src/views/About.vue","mtime":1645827619884},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1645558431171},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645558432747},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1645558431171},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js","mtime":1645558432747}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiV2l0aE5hdiIsIFsKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgImNvdyBkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIgYWxpZ24taXRlbXMtbWQtY2VudGVyXG4gICAgICBtdC01IG10LWxnLTAiLAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlclxuICAgICAgICBmbGV4LWNvbHVtbiBmbGV4LWxnLXJvdyIsCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgImNvdyBzbWFsbCBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICAgICAgICAgICAgc3R5bGU6IHsgImJhY2tncm91bmQtaW1hZ2UiOiAidXJsKGFzc2V0cy92ZXJ0aWNhbC1zd29vcC5wbmcpIiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJpbWciIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltYWdlIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6ICJhc3NldHMvdmFsLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAiQSBibG9uZGUgZ2lybCBzdGFuZGluZyBpbiBmcm9udCBvZiBhIGNvbG9yZnVsIHdhbGwiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaW1hZ2UgbXQtNSIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGlkOiAibW9iaWxlIiwKICAgICAgICAgICAgICAgIHNyYzogImFzc2V0cy92YWwucG5nIiwKICAgICAgICAgICAgICAgIGFsdDogIkEgYmxvbmRlIGdpcmwgc3RhbmRpbmcgaW4gZnJvbnQgb2YgYSBjb2xvcmZ1bCB3YWxsIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYXJnZSIsIGF0dHJzOiB7IGlkOiAidGV4dC1ib3giIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAidGV4dCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCJJdCdzIG5pY2UgdG8gbWVldCB5b3UhIildKSwKICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIiBNeSBuYW1lIGlzIFZhbGVyaWUgUmVtYWtlciBhbmQgSSBhbSBhIFNlbmlvciBhdCBUaGUgVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uIHB1cnN1aW5nIGEgZG91YmxlIG1ham9yIGluIEh1bWFuIENlbnRlcmVkIERlc2lnbiAmIEVuZ2luZWVyaW5nIChIQ0RFKSBhbmQgUHN5Y2hvbG9neS4gSSBpbnRlbmQgdG8gdXNlIHRoZXNlIGRlZ3JlZXMgdG8gZ28gaW50byB0aGUgZmllbGQgb2YgVXNlciBFeHBlcmllbmNlIERlc2lnbi4gTXkgZ29hbCBpcyB0byBjcmVhdGUgY2xlYW4sIGZ1biwgYW5kIGludHVpdGl2ZSBkZXNpZ25zIHRocm91Z2ggdGhlIGltcGxlbWVudGF0aW9uIG9mIGJvdGggaHVtYW4gY2VudGVyZWQgZGVzaWduIGFuZCBwc3ljaG9sb2dpY2FsIHByaW5jaXBsZXMuICIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiIEkgaGF2ZSBiZWVuIGludm9sdmVkIGluIGEgd2lkZSB2YXJpZXR5IG9mIHVuZGVyZ3JhZHVhdGUgcmVzZWFyY2ggcHJvamVjdHMgaW4gYm90aCBQc3ljaG9sb2d5IGFuZCBIQ0RFLiBDdXJyZW50bHksIEkgaGVscCBjb25kdWN0IHF1YWxpdGF0aXZlIHJlc2VhcmNoIHdoaWNoIGFuYWx5emVkIFRpa1RvayB2aWRlb3MgZnJvbSB0aGUgVGV4YXMgRW5lcmd5IENyaXNpcyB0byB1bmRlcnN0YW5kIHRoZSByb2xlIG9mIHNvY2lhbCBtZWRpYSBpbiBjcmlzaXMgcmVzcG9uc2VzLiBJbiB0aGUgZGVwYXJ0bWVudCBvZiBwc3ljaG9sb2d5LCBJIGhlbHBlZCBjb2xsZWN0IGRhdGEgZm9yIGEgVmlydHVhbCBSZWFsaXR5IHN0dWR5IHdoaWNoIGludmVzdGlnYXRlZCBwYXJ0aWNpcGFudHMnIHJlYWN0aW9uIHRvIGRpZmZlcmVudCBsZXZlbHMgb2YgaW1tZXJzaW9uIGludG8gc2ltdWxhdGVkIG5hdHVyYWwgZW52aXJvbm1lbnRzLiAiCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIiBJIGFsc28gd29yayBhcyBhbiBFbmdpbmVlcmluZyBBbWJhc3NhZG9yIGZvciB0aGUgQ29sbGVnZSBvZiBFbmdpbmVlcmluZyB0byBoZWxwIHByb3NwZWN0aXZlIHN0dWRlbnRzIGdldCBleGNpdGVkIGFib3V0IG91ciBlbmdpbmVlcmluZyBwcm9ncmFtLiBXaGVuIEkgYW0gbm90IHN0dWR5aW5nLCBJIGxvdmUgdG8gY3JvY2hldCwgYW5kIGVuam95IHRoZSBuYXR1cmFsIHdvcmxkLiAiCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgXQogICAgKSwKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}