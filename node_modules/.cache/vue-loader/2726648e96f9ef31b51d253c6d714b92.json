{"remainingRequest":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/valerieremaker/Documents/GitHub/portfolio/src/views/portfolio/crochet-buddy.vue?vue&type=template&id=243d1ddc&scoped=true&","dependencies":[{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/src/views/portfolio/crochet-buddy.vue","mtime":1657577928729},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1655365179965},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655365183723},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1655365179965},{"path":"/Users/valerieremaker/Documents/GitHub/portfolio/node_modules/vue-loader/lib/index.js","mtime":1655365183722}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}